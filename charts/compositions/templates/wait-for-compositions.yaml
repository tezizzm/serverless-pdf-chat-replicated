apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "providers.fullname" . }}-wait-for-compositions
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "15"  # Run after composition (weight 10)
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  backoffLimit: 10
  template:
    metadata:
      name: {{ include "providers.fullname" . }}-wait-for-compositions
    spec:
      serviceAccountName: {{ include "providers.fullname" . }}-wait-compositions
      restartPolicy: OnFailure
      containers:
      - name: kubectl
        image: bitnami/kubectl:latest
        command:
        - /bin/sh
        - -c
        - |
          echo "Waiting for CognitoAuthorizedAPI XRD to be established as a CRD..."
          kubectl wait --for=condition=established crd/cognitoauthorizedapis.serverlesspdfchat.shortrib.io --timeout=300s
          if [ $? -ne 0 ]; then
            echo "CognitoAuthorizedAPI XRD failed to become established as a CRD within timeout"
            exit 1
          fi
          
          echo "Waiting for CognitoAuthorizedAPI Composition to be ready..."
          kubectl wait --for=jsonpath='{.metadata.name}' composition.apiextensions.crossplane.io/cognitoauthorizedapis.serverlesspdfchat.shortrib.io --timeout=300s || true
          
          echo "All compositions are ready!"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "providers.fullname" . }}-wait-compositions
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "14"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ include "providers.fullname" . }}-wait-compositions
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "14"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apiextensions.crossplane.io"]
  resources: ["compositions", "compositeresourcedefinitions"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ include "providers.fullname" . }}-wait-compositions
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "14"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
subjects:
- kind: ServiceAccount
  name: {{ include "providers.fullname" . }}-wait-compositions
  namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ include "providers.fullname" . }}-wait-compositions
  apiGroup: rbac.authorization.k8s.io
