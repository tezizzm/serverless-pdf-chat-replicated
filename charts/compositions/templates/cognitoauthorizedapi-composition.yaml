apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: cognitoauthorizedapis.serverlesspdfchat.shortrib.io
  labels:
    {{- include "compositions.labels" . | nindent 4 }}
    provider: aws
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "10"  # Run after XRD (weight 5)
    {{- include "compositions.annotations" . | nindent 4 }}
spec:
  compositeTypeRef:
    apiVersion: serverlesspdfchat.shortrib.io/v1alpha1
    kind: CognitoAuthorizedAPI
  resources:
    # API Gateway
    - name: apigateway
      base:
        apiVersion: apigatewayv2.aws.upbound.io/v1beta1
        kind: API
        metadata:
          labels: {}
        spec:
          forProvider:
            region: ""
            name: ""
            protocolType: "HTTP"
            corsConfiguration:
              - allowCredentials: false
                allowHeaders:
                  - "*"
                allowMethods:
                  - "*"
                allowOrigins:
                  - "*"
            routeSelectionExpression: "$request.method $request.path"
            tags: {}
          providerConfigRef:
            name: default
      patches:
        # Construct the API Gateway name using the composite's name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-api"
          toFieldPath: "spec.forProvider.name"
          policy:
            fromFieldPath: Optional
        # Add a label for the API name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-api"
          toFieldPath: "metadata.labels.api"
        # Patch the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Patch the provider config
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        # Patch tags
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.tags"
          toFieldPath: "spec.forProvider.tags"
          policy:
            mergeOptions:
              keepMapValues: true
        # Patch labels
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        # Store API endpoint in status
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.apiEndpoint"
          toFieldPath: "status.apiEndpoint"
        # Store API ID in status
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.apiId"

    # User Pool
    - name: userpool
      base:
        apiVersion: cognitoidp.aws.upbound.io/v1beta1
        kind: UserPool
        metadata:
          labels: {}
        spec:
          forProvider:
            region: ""
            name: ""
            autoVerifiedAttributes:
              - email
            usernameAttributes:
              - email
            adminCreateUserConfig:
              - allowAdminCreateUserOnly: true
            passwordPolicy:
              - minimumLength: 8
                requireLowercase: true
                requireNumbers: true
                requireSymbols: true
                requireUppercase: true
            tags: {}
          providerConfigRef:
            name: default
      patches:
        # Construct the User Pool name using the composite's name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-user-pool"
          toFieldPath: "spec.forProvider.name"
          policy:
            fromFieldPath: Optional
        # Patch the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Patch the provider config
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        # Patch tags
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.tags"
          toFieldPath: "spec.forProvider.tags"
          policy:
            mergeOptions:
              keepMapValues: true
        # Patch labels
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        # Store User Pool ID in status
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.userPoolId"
        # Store User Pool endpoint in status
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.endpoint"
          toFieldPath: "status.userPoolEndpoint"

    # User Pool Client
    - name: userpoolclient
      base:
        apiVersion: cognitoidp.aws.upbound.io/v1beta1
        kind: UserPoolClient
        metadata:
          labels: {}
        spec:
          forProvider:
            region: ""
            name: ""
            generateSecret: false
            userPoolId: ""
          providerConfigRef:
            name: default
      patches:
        # Construct the User Pool Client name using the composite's name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-client"
          toFieldPath: "spec.forProvider.name"
          policy:
            fromFieldPath: Optional
        # Patch the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Patch the provider config
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        # Patch labels
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        # Reference the User Pool ID
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolId"
          toFieldPath: "spec.forProvider.userPoolId"
          policy:
            fromFieldPath: Required
        # Store User Pool Client ID in status
        - type: ToCompositeFieldPath
          fromFieldPath: "status.atProvider.id"
          toFieldPath: "status.userPoolClientId"
      readinessChecks:
        - type: None
        - type: NonEmpty
          fieldPath: status.atProvider.id

    # Authorizer
    - name: authorizer
      base:
        apiVersion: apigatewayv2.aws.upbound.io/v1beta1
        kind: Authorizer
        metadata:
          labels: {}
        spec:
          forProvider:
            region: ""
            name: ""
            apiId: ""
            authorizerType: JWT
            identitySources:
              - "$request.header.Authorization"
            jwtConfiguration:
              - audience: []
                issuer: ""
          providerConfigRef:
            name: default
      patches:
        # Construct the Authorizer name using the composite's name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-authorizer"
          toFieldPath: "spec.forProvider.name"
          policy:
            fromFieldPath: Optional
        # Patch the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.region"
        # Patch the provider config
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        # Patch labels
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        # Add Authorizer label for route selection
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-cognito-authorizer"
          toFieldPath: "metadata.labels.authorizer"
          policy:
            fromFieldPath: Optional
        # Reference the API ID
        - type: FromCompositeFieldPath
          fromFieldPath: "status.apiId"
          toFieldPath: "spec.forProvider.apiId"
          policy:
            fromFieldPath: Required
        # Reference the User Pool Client ID for the audience
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolClientId"
          toFieldPath: "spec.forProvider.jwtConfiguration[0].audience[0]"
          policy:
            fromFieldPath: Required
        # Use the User Pool endpoint as the JWT issuer with https:// prefix
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "status.userPoolEndpoint"
            strategy: string
            string:
              fmt: "https://%s"
          toFieldPath: "spec.forProvider.jwtConfiguration[0].issuer"
          policy:
            fromFieldPath: Required
      readinessChecks:
        - type: NonEmpty
          fieldPath: status.atProvider.id

    # ConfigMap
    - name: configmap
      base:
        apiVersion: kubernetes.crossplane.io/v1alpha2
        kind: Object
        metadata:
          labels: {}
        spec:
          forProvider:
            manifest:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: ""
                namespace: ""
                labels: {}
              data:
                region: ""
                apiEndpoint: ""
                userPoolId: ""
                userPoolClientId: ""
          providerConfigRef:
            name: default
      patches:
        # Construct the ConfigMap name using the composite's name
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "metadata.name"
            strategy: string
            string:
              fmt: "%s-frontend-config"
          toFieldPath: "spec.forProvider.manifest.metadata.name"
          policy:
            fromFieldPath: Optional
        # First try to use the composite's namespace for the ConfigMap
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.namespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
          policy:
            fromFieldPath: Optional
            # Use configMapNamespace as fallback if namespace is not set
            mergeOptions:
              keepMapValues: false
        # Fall back to configMapNamespace if composite namespace is not available
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.configMapNamespace"
          toFieldPath: "spec.forProvider.manifest.metadata.namespace"
          policy:
            fromFieldPath: Optional
        # Patch the region
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.region"
          toFieldPath: "spec.forProvider.manifest.data.region"
        # Patch the API endpoint with /dev/ appended
        - type: CombineFromComposite
          combine:
            variables:
              - fromFieldPath: "status.apiEndpoint"
            strategy: string
            string:
              fmt: "%s/dev/"
          toFieldPath: "spec.forProvider.manifest.data.apiEndpoint"
          policy:
            fromFieldPath: Required
        # Patch the User Pool ID
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolId"
          toFieldPath: "spec.forProvider.manifest.data.userPoolId"
          policy:
            fromFieldPath: Required
        # Patch the User Pool Client ID
        - type: FromCompositeFieldPath
          fromFieldPath: "status.userPoolClientId"
          toFieldPath: "spec.forProvider.manifest.data.userPoolClientId"
          policy:
            fromFieldPath: Required
        # Patch the provider config
        - type: FromCompositeFieldPath
          fromFieldPath: "spec.providerConfigRef.name"
          toFieldPath: "spec.providerConfigRef.name"
          policy:
            fromFieldPath: Optional
        # Patch labels to the ConfigMap
        - type: FromCompositeFieldPath
          fromFieldPath: "metadata.labels"
          toFieldPath: "spec.forProvider.manifest.metadata.labels"
          policy:
            mergeOptions:
              keepMapValues: true
        # Store the ConfigMap name in status
        - type: ToCompositeFieldPath
          fromFieldPath: "spec.forProvider.manifest.metadata.name"
          toFieldPath: "status.configMapName"
      readinessChecks:
        - type: MatchCondition
          matchCondition:
            type: Ready
            status: "True"
