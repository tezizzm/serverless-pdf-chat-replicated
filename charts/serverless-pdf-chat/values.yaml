# Default values for serverless-pdf-chat
# This is a YAML-formatted file.

global:
  namePrefix: "pdf-chat"
  environment: "dev"
  images:
    registry: ""
    pullSecrets: []  # Global list of image pull secret names

images:
  repository: "serverless-pdf-chat"  # Repository name in ECR
  tag: null  # Will use Chart.AppVersion if null
  pullPolicy: "IfNotPresent"

application:
  config:
    region: "us-west-2"
    modelId: "meta.llama3-1-405b-instruct-v1:0"
    embeddingModelId: "amazon.titan-embed-text-v2:0"

frontend:
  enabled: true
  image:
    registry: null  # If null, will use global images.registry
    repository: null  # If null, will use "{{ .Values.images.repository }}/frontend"
    tag: null  # Will use Chart.AppVersion if null
    pullPolicy: "IfNotPresent"
    pullSecrets: []  # Array of existing secret names for private registries
  builderImage:
    registry: null  # If null, will use global images.registry
    repository: null  # If null, will use "{{ .Values.images.repository }}/builder"
    tag: null  # Will use Chart.AppVersion if null
    pullPolicy: "IfNotPresent"
  builderResources:
    limits:
      cpu: "1"
      memory: "2Gi"
    requests:
      cpu: "500m"
      memory: "1Gi"
  replicaCount: 1
  resources:
    limits:
      cpu: "200m"
      memory: "256Mi"
    requests:
      cpu: "100m"
      memory: "128Mi"
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
  podSecurityContext: {}
  securityContext: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}
  podAnnotations: {}
  service:
    type: "ClusterIP"
    port: 80
    annotations: {}
  ingress:
    enabled: true
    className: "nginx"
    annotations: {}
    hosts:
      - host: "pdf-chat.example.com"
        paths:
          - path: "/"
            pathType: "Prefix"
    tls:
      - secretName: "pdf-chat-tls"
        hosts:
          - "pdf-chat.example.com"

aws:
  region: "us-west-2"
  accountId: "123456789012"  # This should be replaced with the actual AWS account ID
  providerConfigName: "default"
  ecrAccessToken: ""  # ECR access token for authentication
  s3:
    corsEnabled: true
    versioning: true
    lifecycleRules:
      - enabled: true
        expiration: 90
    publicAccessBlockConfiguration:
      blockPublicAcls: true
      blockPublicPolicy: true
      ignorePublicAcls: true
      restrictPublicBuckets: true
        
  dynamodb:
    billingMode: "PAY_PER_REQUEST"
    documentTable:
      name: null
    memoryTable:
      name: null
        
  sqs:
    embeddingQueue:
      name: null
      visibilityTimeout: 180
      messageRetentionPeriod: 3600
  
  iam:
    roles:
      lambdaRole:
        name: null  # Optional, will use a generated name if not provided
        policies:
          name: null  # Optional, will use a default name if not provided
  
  lambda:
    runtime: "python3.11"
    handler: "lambda_function.lambda_handler"
    timeout: 30
    memorySize: 256
    functions:
      uploadTrigger:
        name: null
        description: "Handles S3 uploads and triggers document processing"
        timeout: 30
        memorySize: 256
        repository: "upload-trigger"
        tag: null  # Will use global tag if null
        environment:
          - ADDITIONAL_ENV_VAR: "value"
      generatePresignedUrl:
        name: null
        description: "Generates presigned URLs for document uploads"
        timeout: 10
        memorySize: 128
        repository: "generate-presigned-url"
        tag: null
      generateEmbeddings:
        name: null
        description: "Processes documents and generates embeddings"
        timeout: 180
        memorySize: 1024
        repository: "generate-embeddings"
        tag: null
      getDocument:
        name: null
        description: "Retrieves document information"
        timeout: 10
        memorySize: 128
        repository: "get-document"
        tag: null
      getAllDocuments:
        name: null
        description: "Retrieves all user documents"
        timeout: 10
        memorySize: 128
        repository: "get-all-documents"
        tag: null
      deleteDocument:
        name: null
        description: "Deletes a document and its embeddings"
        timeout: 30
        memorySize: 256
        repository: "delete-document"
        tag: null
      addConversation:
        name: null
        description: "Adds a new conversation to memory"
        timeout: 10
        memorySize: 128
        repository: "add-conversation"
        tag: null
      generateResponse:
        name: null
        description: "Generates a response using the LLM"
        timeout: 60
        memorySize: 512
        repository: "generate-response"
        tag: null
        
tags:
  environment: "dev"
  application: "pdf-chat"
