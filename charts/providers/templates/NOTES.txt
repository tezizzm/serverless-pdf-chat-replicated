Thank you for installing {{ .Chart.Name }}.

Crossplane providers have been successfully installed in your cluster.

INSTALLED PROVIDERS:
-------------------
{{- range $key, $value := .Values.aws.providers }}
{{- if and (ne $key "registry") (ne $key "pullSecrets") (hasKey $value "version") }}
- AWS {{ $key }} (version: {{ $value.version }})
{{- end }}
{{- end }}
- Kubernetes (version: {{ .Values.kubernetes.provider.version }})

DEPLOYMENT CONFIGURATION:
-----------------------
All providers use the runtime configuration: {{ include "providers.runtimeConfigName" . }}
- CPU Limits: {{ .Values.aws.deploymentRuntimeConfig.resources.limits.cpu }}
- Memory Limits: {{ .Values.aws.deploymentRuntimeConfig.resources.limits.memory }}
- CPU Requests: {{ .Values.aws.deploymentRuntimeConfig.resources.requests.cpu }}
- Memory Requests: {{ .Values.aws.deploymentRuntimeConfig.resources.requests.memory }}

NEXT STEPS:
----------
1. Install the provider configurations chart to configure these providers:
   helm install providerconfigs ./charts/providerconfigs

2. Check that all providers are properly installed:
   kubectl get providers

3. Wait for all providers to be healthy:
   kubectl wait --for=condition=Healthy providers --all --timeout=300s

TROUBLESHOOTING:
---------------
If you encounter issues with the providers:

1. Check provider status:
   kubectl get providers

2. Check provider controller pods:
   kubectl get pods -n crossplane-system

3. Check provider controller logs:
   kubectl logs -n crossplane-system <provider-pod-name>

4. Check the wait-ready job logs:
   kubectl logs job/{{ include "providers.fullname" . }}-wait-ready

Note: To clean up providers when uninstalling, you may need to manually delete them:
   kubectl delete providers.pkg.crossplane.io -l app.kubernetes.io/instance={{ .Release.Name }}
